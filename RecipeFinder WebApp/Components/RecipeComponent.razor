@page "/recipecomponent"
@using System.Text.Json
@using HtmlAgilityPack
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Microsoft.IdentityModel.Tokens
@using Recipe_Finder
@using System.Diagnostics
@using RecipeFinder_WebApp.Components
@inject ScrapperService Scrap
@inject NavigationManager Navigation


<PageTitle>Recipe Search</PageTitle>

<h1>Recipe Search</h1>

<div class="alert alert-secondary mt-4" style="border: thin solid black; margin: 5px">
    <span class="oi oi-pencil mr-2" aria-hidden="true"></span>
    <strong>@Title</strong>
    <EditForm Model="@recipe" FormName="RecipeForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <span class="text-nowrap">

            <br />
            <label for="searchQuery">Search recipe by Name : </label><br />
            <InputText id="searchQuery"  @bind-Value="recipe.RecipeName"></InputText><br />

            <label for="cuisine">Search recipe by Cuisine Type : </label><br />
            <InputSelect @bind-Value="recipe.CuisineType">
                @foreach (var type in Enum.GetValues(typeof(CuisineType)))
                {
                    <option value="@type">@type</option>
                }
            </InputSelect><br />

            <label>Difficulty Level:</label><br />
            <InputSelect @bind-Value="recipe.DifficultyLevel" >
                @foreach (var level in Enum.GetValues(typeof(DifficultyLevel)))
                {
                    <option value="@level">@level</option>
                }
            </InputSelect><br />

            <label>Occasion Tags:</label><br />
            <InputSelect @bind-Value="recipe.OccasionTags">
                @foreach (var tag in Enum.GetValues(typeof(OccasionTags)))
                {
                    <option value="@tag">@tag</option>
                }
            </InputSelect><br />

        <button class="btn btn-outline-primary" @onclick="SearchForRecipe">Search For Recipe on AllRecipes</button><br />
        <button class="btn btn-outline-primary" @onclick="SearchForRecipeFromCK">Search For Recipe on ChefKoch</button>
        </span>
    </EditForm>
</div>

@if (recipes.Count > 0)
{
    <ol>
        @foreach (var rec in recipes)
        {
            <li>
                @if (!string.IsNullOrEmpty(rec.Image))
                {
                    <img src="@rec.Image" alt="Recipe Image" style="width: 100px; height: 100px;" />
                }
                <br />
                <a href="@rec.Url" target="_blank">@rec.RecipeName</a><br />
                <a @onclick="() => NavigateToRecipeDetails(rec.Url)" style="cursor: pointer;">@rec.RecipeName</a>
            </li>
        }
    </ol>
}
else if (!string.IsNullOrEmpty(searchQuery))
{
    <p>No results found for "@searchQuery".</p>
}


@code {
    [Parameter]
    public string Title { get; set; }
    private Recipe recipe { get; set; } = new Recipe();
    private List<Recipe> recipes { get; set; } = new List<Recipe>();

    private string searchQuery { get; set; } = string.Empty;

    private async Task SearchForRecipe()
    {
        recipes = await Scrap.ScrapeFromAllRecipe(searchQuery);
    }

    private async Task SearchForRecipeFromCK()
    {
        recipes = await Scrap.ScrapeSearchResultsFromChefkoch(searchQuery);
    }

    private void NavigateToRecipeDetails(string recipeUrl)
    {
        Navigation.NavigateTo($"/recipeDetails?url={Uri.EscapeDataString(recipeUrl)}");
    }
}
