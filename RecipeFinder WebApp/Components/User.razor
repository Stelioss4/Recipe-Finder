@using RecipeFinder_WebApp
@using Recipe_Finder
@using System.IO
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject UserService UserServ

<EditForm Model="UserProfile" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="FirstName">First Name:</label><br />
        <InputText id="FirstName" @bind-Value="UserProfile.FirstName" />
        <ValidationMessage For="@(() => UserProfile.FirstName)" />
    </div>

    <div>
        <label for="LastName">Last Name:</label><br />
        <InputText id="LastName" @bind-Value="UserProfile.LastName" />
        <ValidationMessage For="@(() => UserProfile.LastName)" />
    </div>

    <div>
        <label for="Email">Email:</label><br />
        <InputText id="Email" @bind-Value="UserProfile.Email" />
        <ValidationMessage For="@(() => UserProfile.Email)" />
    </div>

    <div>
        <label for="Password">Password:</label><br />
        <InputText type="password" id="Password" @bind-Value="UserProfile.Password" />
        <ValidationMessage For="@(() => UserProfile.Password)" />
    </div>

    <div>
        <label for="ConfirmPassword">Confirm Password:</label><br />
        <InputText type="password" id="ConfirmPassword" @bind-Value="ConfirmPassword" />
        <ValidationMessage For="@(() => ConfirmPassword)" />
    </div>

    <div>
        <label for="StreetName">Street Name:</label><br />
        <InputText id="StreetName" @bind-Value="UserProfile.Address.StreetsName" />
        <ValidationMessage For="@(() => UserProfile.Address.StreetsName)" />
    </div>

    <div>
        <label for="HouseNumber">House Number:</label><br />
        <InputText id="HouseNumber" @bind-Value="UserProfile.Address.Housenumber" />
        <ValidationMessage For="@(() => UserProfile.Address.Housenumber)" />
    </div>

    <div>
        <label for="PostalCode">Postal Code:</label><br />
        <InputText id="PostalCode" @bind-Value="UserProfile.Address.PostalCode" />
        <ValidationMessage For="@(() => UserProfile.Address.PostalCode)" />
    </div>

    <div>
        <label for="City">City:</label><br />
        <InputText id="City" @bind-Value="UserProfile.Address.City" />
        <ValidationMessage For="@(() => UserProfile.Address.City)" />
    </div>

    <button type="submit">Register</button>
</EditForm>

@code {
    [Parameter]
    public string Title { get; set; }

    private List<UsersProfile> users { get; set; } = new List<UsersProfile>();

    private UsersProfile UserProfile { get; set; } = new UsersProfile
        {
            Address = new Address()
        };

    private string ConfirmPassword { get; set; }

    private void RegisterUser()
    {
        // Check password confirmation
        if (UserProfile.Password != ConfirmPassword)
        {
            Console.WriteLine("Passwords do not match.");
            return;
        }

        try
        {
            users = DataService.LoadUsersFromXmlFile(Constants.XML_USER_PATH);

            if (users.Any(u => u.Email.Equals(UserProfile.Email, StringComparison.OrdinalIgnoreCase)))
            {
                Console.WriteLine("User with this email already exists.");
                return;
            }

            users.Add(UserProfile);
            DataService.SaveUsersToXmlFile(users, Constants.XML_USER_PATH);

            Navigation.NavigateTo("/profile");
            Console.WriteLine("User registered successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }

        // Reset form
        UserProfile = new UsersProfile
            {
                Address = new Address()
            };
        ConfirmPassword = string.Empty;
    }
}
