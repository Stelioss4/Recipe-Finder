@using Recipe_Finder
@using HtmlAgilityPack
@inject ScrapperService Scrap
@inject NavigationManager Navigation

<PageTitle>Recipe Details</PageTitle>

<h3>Recipe Details</h3>

@if (recipe != null)
{
    <div>
        <h2>@recipe.RecipeName</h2>
        @if (!string.IsNullOrEmpty(recipe.Image))
        {
            <img src="@recipe.Image" alt="Recipe Image" style="width: 300px; height: 300px;" />
        }
        @if (!string.IsNullOrEmpty(recipe.VideoUrl))
        {
            <div>
                <h3>Recipe Video</h3>
                <video width="320" height="240" controls>
                    <source src="@recipe.VideoUrl" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
            </div>
        }
        <p>@recipe.DifficultyLevel</p>
        <p>@recipe.ListofIngredients.ToString()</p>
        <p>@recipe.CookingInstructions</p>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public string Url { get; set; }

    private Recipe recipe;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync called");
        var uri = new Uri(Navigation.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("url", out var urlValue))
        {
            Console.WriteLine($"Found url parameter: {urlValue}");
            var decodedUrl = Uri.UnescapeDataString(urlValue);
            recipe = await Scrap.ScrapeCKDetailsAndUpdateRecipie(new Recipe { Url = decodedUrl });
            Console.WriteLine($"Scraped recipe: {recipe.RecipeName}");
        }
        else
        {
            Console.WriteLine("url parameter not found, navigating to home");
            Navigation.NavigateTo("/");
        }
    }
}