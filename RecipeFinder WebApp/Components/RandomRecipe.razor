@page "/random-recipe"
@using System.Text.Json
@inject IHttpClientFactory ClientFactory

<h3>Random Recipe</h3>

<button class="btn btn-dark" @onclick="GetRandomRecipeAsync">Get Random Recipe</button>

@if (recipe != null)
{
    <div>
        <h4>@recipe.RecipeName</h4>
        <img src="@recipe.Image" alt="Recipe Image" />
        <p>@recipe.CookingInstructions</p>
    </div>
}

@code {
    private Recipe_Finder.Recipe recipe { get; set; } = new Recipe_Finder.Recipe();
    private List<Recipe_Finder.Recipe> recipes { get; set; } = new List<Recipe_Finder.Recipe>();

    private async Task GetRandomRecipeAsync()
    {
        var client = ClientFactory.CreateClient("SpoonacularClient");
        string apiKey = "a1f6b23d83fb40ec877e2e2b9adcfe49";
        string requestUrl = $"recipes/random?apiKey={apiKey}";

        try
        {
            var response = await client.GetAsync(requestUrl);
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var apiResponse = JsonSerializer.Deserialize<ApiResponse>(json, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                 recipe = apiResponse.Recipes.FirstOrDefault();
            }
            else
            {
                Console.WriteLine($"Error: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }

    public class ApiResponse
    {
        public List<Recipe> Recipes { get; set; }
    }

  
}
