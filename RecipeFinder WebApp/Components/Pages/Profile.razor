@page "/profile"
@using Microsoft.AspNetCore.Identity
@using RecipeFinder_WebApp.Data
@using System.Security.Claims
@using Recipe_Finder
@using Microsoft.EntityFrameworkCore

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject DataService DataService
@inject UserManager<ApplicationUser> _userManager

<h3>User Profile</h3>
<div class="container mt-5">
    @if (userProfile != null)
    {
        <p>Welcome, @userProfile.Name!</p>
        <div class="col-md-6 col-md-offset-2"></div>
        @if (userProfile.FavoriteRecipes != null && userProfile.FavoriteRecipes.Count > 0)
        {
            <div class="row">
                @foreach (var rec in userProfile.FavoriteRecipes)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100">
                            @if (!string.IsNullOrEmpty(rec.Image))
                            {
                                <img src="@rec.Image" class="card-img-top" alt="Recipe Image" style="height: 200px; object-fit: cover;" />
                            }
                            <div class="card-body">
                                <h5 class="card-title">@rec.RecipeName</h5>
                                <a href="#" @onclick="() => NavigateToRecipeDetails(rec.Url)" class="btn btn-outline-primary">View Recipe</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p>You don't have any favorite recipes yet.</p>
            <button class="btn btn-outline-primary" @onclick="NavigateToHome">Search recipes to Add!</button>
        }
    }
    else
    {
        <p>Loading user profile...</p>
    }
</div>

@code {
    private User userProfile { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var appUser = await _userManager.GetUserAsync(user);

            if (appUser == null)
            {
                throw new NullReferenceException("ApplicationUser is null.");
            }


            userProfile = appUser.User;
            userProfile.Name = appUser.UserName;

            if (userProfile == null)
            {
                throw new NullReferenceException("User associated with ApplicationUser is null.");
            }


            await _userManager.UpdateAsync(appUser);

        }
        else
        {
            Console.WriteLine("User is not authenticated.");
            Navigation.NavigateTo("account/login");
        }
    }


    private void NavigateToRecipeDetails(string recipeUrl)
    {
        Navigation.NavigateTo($"/recipeDetails?url={Uri.EscapeDataString(recipeUrl)}");
    }

    private void NavigateToHome()
    {
        Navigation.NavigateTo("/");
    }
}
