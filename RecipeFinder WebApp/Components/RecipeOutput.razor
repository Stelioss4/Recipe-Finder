@using RecipeFinder_WebApp.Data
@using Recipe_Finder

@inject NavigationManager Navigation
@inject DataService DataService
@inject FavoriteService _favorite


<div class="row mt-5">
    @if (recipes?.Count > 0)
    {
        @foreach (var rec in recipes)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    @if (rec.Image != null && rec.Image.Length > 0)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(rec.Image)" class="card-img-top" alt="Recipe Image" style="height: 200px; object-fit: cover;" />
                    }
                    <div class="btn-group">
                        <div class="card-body">
                            <h5 class="card-title">@rec.RecipeName</h5>

                            <a href="#" @onclick="() => NavigateToRecipeDetails(rec.Url)" class="btn btn-outline-primary">View Recipe</a>
                            @if (appUser != null)
                            {
                                @if (AddRecipeButton)
                                {
                                    <button class="btn btn-primary" @onclick="() => AddRecipeToFavorite(rec)">Add to Fav!</button>
                                }

                                @if (RemoveRecipeButton)
                                {
                                    <button class="btn btn-danger" @onclick="() => RemoveRecipeFromFavorite(rec)">Remove</button>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter] public List<Recipe> recipes { get; set; } = new List<Recipe>();
    [Parameter] public ApplicationUser appUser { get; set; } = new();
    [Parameter] public bool RemoveRecipeButton { get; set; } = true;
    [Parameter] public bool AddRecipeButton { get; set; } = true;
    [Parameter] public EventCallback<Recipe> OnFavoritesChanged { get; set; }

    private void NavigateToRecipeDetails(string recipeUrl)
    {
        Navigation.NavigateTo($"/recipeDetails?url={Uri.EscapeDataString(recipeUrl)}");
    }

    private async Task AddRecipeToFavorite(Recipe recipe)
    {
        await _favorite.AddFavoriteRecipeAsync(recipe);
        await OnFavoritesChanged.InvokeAsync(recipe);

    }

    private async Task RemoveRecipeFromFavorite(Recipe recipe)
    {
        await _favorite.RemoveFavoriteRecipeAsync(recipe);
        await OnFavoritesChanged.InvokeAsync(recipe);
    }
}